{"ast":null,"code":"var _jsxFileName = \"G:\\\\Projects\\\\Programming\\\\wgucapstonedev\\\\client\\\\src\\\\routes\\\\reports.js\";\nimport React, { Component } from 'react';\nimport { appointment, routapp, specapp } from './../js/classes/appointment';\nimport axios from 'axios';\nimport Navbar from './../routes/nav';\n\nclass reports extends Component {\n  constructor() {\n    super();\n    this.state = {\n      path: window.location.protocol + '//' + window.location.hostname,\n      crudState: '',\n      selected: '',\n      cUser: '',\n      categories: [],\n      entries: [],\n      year: new Date().getFullYear(),\n      tblall: [],\n      tblrou: [],\n      tblcon: [],\n      tblspe: [],\n      listapps: [],\n      listrout: [],\n      listcons: [],\n      listspec: []\n    };\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"isLoggedIn\") === 'false' || !localStorage.getItem(\"isLoggedIn\") || localStorage.getItem(\"userType\") !== \"Admin\") {\n      this.props.history.push('/');\n    }\n\n    let all = [\"Month\", \"Appointments\", \"Sum\", \"Average\", \"Labor Jobs\", \"Consultations\", \"Special Orders\"];\n    this.setState({\n      categories: all\n    });\n    this.getAllApps(this.state.year);\n  }\n\n  handleTypeChange(event) {\n    switch (event.target.value) {\n      case \"tblall\":\n        this.setState({\n          categories: [\"Month\", \"Appointments\", \"Sum\", \"Average\", \"Labor Jobs\", \"Consultations\", \"Special Orders\"]\n        });\n        document.getElementById(\"tblall\").classList.remove('d-none');\n        document.getElementById(\"tblrou\").classList.add('d-none');\n        document.getElementById(\"tblcon\").classList.add('d-none');\n        document.getElementById(\"tblspe\").classList.add('d-none');\n        break;\n\n      case \"tblrou\":\n        this.setState({\n          categories: [\"Month\", \"Appointments\", \"Sum\", \"Average\", \"Tasks\", \"Average Tasks\"]\n        });\n        document.getElementById(\"tblall\").classList.add('d-none');\n        document.getElementById(\"tblrou\").classList.remove('d-none');\n        document.getElementById(\"tblcon\").classList.add('d-none');\n        document.getElementById(\"tblspe\").classList.add('d-none');\n        break;\n\n      case \"tblcon\":\n        this.setState({\n          categories: [\"Month\", \"Appointments\"]\n        });\n        document.getElementById(\"tblall\").classList.add('d-none');\n        document.getElementById(\"tblrou\").classList.add('d-none');\n        document.getElementById(\"tblcon\").classList.remove('d-none');\n        document.getElementById(\"tblspe\").classList.add('d-none');\n        break;\n\n      case \"tblspe\":\n        this.setState({\n          categories: [\"Month\", \"Appointments\", \"Sum\", \"Average\", \"Supply Cost\", \"Average Supply Cost\"]\n        });\n        document.getElementById(\"tblall\").classList.add('d-none');\n        document.getElementById(\"tblrou\").classList.add('d-none');\n        document.getElementById(\"tblcon\").classList.add('d-none');\n        document.getElementById(\"tblspe\").classList.remove('d-none');\n        break;\n    }\n  }\n\n  getCurrentYear() {\n    axios.get(this.state.path + ':5000/appointment/y/' + this.state.year).then(res => {\n      res.data.forEach(app => {\n        console.log(\"  ---\" + new Date(app.stime).getFullYear());\n        let newapp = {};\n\n        switch (app.type) {\n          case 'rout':\n            newapp = new routapp(app._id, app.userid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime, app.rate, app.total, app.tasks);\n            break;\n\n          case 'cons':\n            newapp = new appointment(app._id, app.usserid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime);\n            break;\n\n          case 'spec':\n            newapp = new specapp(app._id, app.usserid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime, app.rate, app.total, app.supply);\n            break;\n        }\n      });\n    });\n  }\n\n  getAllApps(i) {\n    let routs = [];\n    let cons = [];\n    let specs = [];\n    axios.get(this.state.path + ':5000/appointment/y/' + i).then(res => {\n      res.data.forEach(app => {\n        let newapp = {};\n\n        switch (app.type) {\n          case 'rout':\n            console.log(app.stime);\n            newapp = new routapp(app._id, app.userid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime, app.rate, app.total, app.tasks);\n            routs.push(newapp);\n            break;\n\n          case 'cons':\n            newapp = new appointment(app._id, app.usserid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime);\n            cons.push(newapp);\n            break;\n\n          case 'spec':\n            newapp = new specapp(app._id, app.usserid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime, app.rate, app.total, app.supply);\n            specs.push(newapp);\n            break;\n        }\n      });\n      this.setState({\n        listrout: routs,\n        listcons: cons,\n        listspec: specs\n      });\n    }).finally(() => {\n      this.loadApps();\n    });\n  }\n\n  changeYear(i) {\n    this.getAllApps(this.state.year + i);\n    this.setState({\n      year: this.state.year + i\n    });\n    console.log(this.state.year);\n  }\n\n  getMonthName(i) {\n    let name = '';\n\n    switch (i) {\n      case 0:\n        name = \"Jan\";\n        break;\n\n      case 1:\n        name = \"Feb\";\n        break;\n\n      case 2:\n        name = \"Mar\";\n        break;\n\n      case 3:\n        name = \"Apr\";\n        break;\n\n      case 4:\n        name = \"May\";\n        break;\n\n      case 5:\n        name = \"Jun\";\n        break;\n\n      case 6:\n        name = \"Jul\";\n        break;\n\n      case 7:\n        name = \"Aug\";\n        break;\n\n      case 8:\n        name = \"Sep\";\n        break;\n\n      case 9:\n        name = \"Oct\";\n        break;\n\n      case 10:\n        name = \"Nov\";\n        break;\n\n      case 11:\n        name = \"Dec\";\n        break;\n    }\n\n    return name;\n  }\n\n  loadApps() {\n    let table = [];\n    let rou = [];\n    let con = [];\n    let spe = [];\n\n    for (let i = 0; i <= 11; i++) {\n      let obj = {};\n      obj.count = 0;\n      obj.sum = 0;\n      obj.avg = 0;\n      obj.rout = 0;\n      obj.cons = 0;\n      obj.spec = 0;\n      let r = {};\n      r.count = 0;\n      r.sum = 0;\n      r.avg = 0;\n      r.tasks = 0;\n      r.avgtasks = 0;\n      let c = {};\n      c.count = 0;\n      let s = {};\n      s.count = 0;\n      s.sum = 0;\n      s.avg = 0;\n      s.sup = 0;\n      s.supavg = 0;\n      table.push(obj);\n      rou.push(r);\n      con.push(c);\n      spe.push(s);\n    }\n\n    this.state.listrout.forEach(app => {\n      console.log(app._stime);\n      console.log(app.indexMonth());\n      table[app.indexMonth()].count++;\n      table[app.indexMonth()].rout++;\n      rou[app.indexMonth()].count++;\n      table[app.indexMonth()].sum = app._total + table[app.indexMonth()].sum;\n      rou[app.indexMonth()].sum = app._total + rou[app.indexMonth()].sum;\n\n      if (table[app.indexMonth()].sum > 0) {\n        table[app.indexMonth()].avg = (table[app.indexMonth()].sum / table[app.indexMonth()].count).toFixed(2);\n      }\n\n      if (rou[app.indexMonth()].sum > 0) {\n        rou[app.indexMonth()].avg = (rou[app.indexMonth()].sum / rou[app.indexMonth()].count).toFixed(2);\n      }\n\n      rou[app.indexMonth()].tasks = app.getTaskCount() + rou[app.indexMonth()].tasks;\n\n      if (rou[app.indexMonth()].tasks > 0) {\n        rou[app.indexMonth()].avgtasks = (rou[app.indexMonth()].tasks / rou[app.indexMonth()].count).toFixed(2);\n      }\n    });\n    this.state.listcons.forEach(app => {\n      table[app.indexMonth()].count++;\n      table[app.indexMonth()].cons++;\n      con[app.indexMonth()].count++;\n    });\n    this.state.listspec.forEach(app => {\n      table[app.indexMonth()].count++;\n      table[app.indexMonth()].spec++;\n      spe[app.indexMonth()].count++;\n      table[app.indexMonth()].sum = app._total + table[app.indexMonth()].sum;\n      spe[app.indexMonth()].sum = app._total + spe[app.indexMonth()].sum;\n\n      if (table[app.indexMonth()].sum > 0) {\n        table[app.indexMonth()].avg = (table[app.indexMonth()].sum / table[app.indexMonth()].count).toFixed(2);\n      }\n\n      if (spe[app.indexMonth()].sum > 0) {\n        spe[app.indexMonth()].avg = (spe[app.indexMonth()].sum / spe[app.indexMonth()].count).toFixed(2);\n      }\n\n      spe[app.indexMonth()].sup = app._supply + spe[app.indexMonth()].sup;\n\n      if (spe[app.indexMonth()].sup > 0) {\n        spe[app.indexMonth()].supavg = (spe[app.indexMonth()].sup / spe[app.indexMonth()].count).toFixed(2);\n      } else {\n        spe[app.indexMonth()].supavg = 0;\n      }\n    });\n    this.setState({\n      tblall: table\n    });\n    this.setState({\n      tblrou: rou\n    });\n    this.setState({\n      tblcon: con\n    });\n    this.setState({\n      tblspe: spe\n    });\n    console.log(this.state.tblall);\n    console.log(this.state.tblspe);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg border input-col p-0 h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-secondary  w-100 h-100 m-0\",\n      onClick: () => this.changeYear(-1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 16 16\",\n      class: \"bi bi-arrow-left\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      \"fill-rule\": \"evenodd\",\n      d: \"M5.854 4.646a.5.5 0 0 1 0 .708L3.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      \"fill-rule\": \"evenodd\",\n      d: \"M2.5 8a.5.5 0 0 1 .5-.5h10.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 12\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"display-4 mb-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 33\n      }\n    }, \"Current Year: \", this.state.year)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-secondary  w-100 h-100 m-0\",\n      onClick: () => this.changeYear(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"1em\",\n      height: \"1em\",\n      viewBox: \"0 0 16 16\",\n      class: \"bi bi-arrow-right\",\n      fill: \"currentColor\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      \"fill-rule\": \"evenodd\",\n      d: \"M10.146 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L12.793 8l-2.647-2.646a.5.5 0 0 1 0-.708z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      \"fill-rule\": \"evenodd\",\n      d: \"M2 8a.5.5 0 0 1 .5-.5H13a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 12\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg border  recent p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group btn-group-toggle w-100 w-100 m-0 \",\n      \"data-toggle\": \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"btn btn-secondary w-100 active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"type\",\n      id: \"allApps\",\n      value: \"tblall\",\n      onClick: this.handleTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 41\n      }\n    }), \" All Appointments\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"btn btn-secondary w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"type\",\n      id: \"allLabor\",\n      value: \"tblrou\",\n      onClick: this.handleTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 41\n      }\n    }), \" All Labor\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"btn btn-secondary w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"type\",\n      id: \"allCons\",\n      value: \"tblcon\",\n      onClick: this.handleTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 41\n      }\n    }), \" All Consultations\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"btn btn-secondary w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"type\",\n      id: \"allSpec\",\n      value: \"tblspe\",\n      onClick: this.handleTypeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 41\n      }\n    }), \" All Special Orders\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped table-fix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 41\n      }\n    }, this.state.categories.map((header, index) => /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 45\n      }\n    }, header)))), /*#__PURE__*/React.createElement(\"tbody\", {\n      id: \"tblall\",\n      className: \"empty-square all-apps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 37\n      }\n    }, this.state.tblall.map((data, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 49\n      }\n    }, this.getMonthName(index)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 49\n      }\n    }, data.count), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 49\n      }\n    }, \"$\" + data.sum), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 49\n      }\n    }, \"$\" + data.avg), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 49\n      }\n    }, data.rout), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 49\n      }\n    }, data.cons), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 49\n      }\n    }, data.spec)))), /*#__PURE__*/React.createElement(\"tbody\", {\n      id: \"tblrou\",\n      className: \"empty-square all-apps d-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 37\n      }\n    }, this.state.tblrou.map((data, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 49\n      }\n    }, this.getMonthName(index)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 49\n      }\n    }, data.count), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 49\n      }\n    }, \"$\" + data.sum), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 49\n      }\n    }, \"$\" + data.avg), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 49\n      }\n    }, data.tasks), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 49\n      }\n    }, data.avgtasks)))), /*#__PURE__*/React.createElement(\"tbody\", {\n      id: \"tblcon\",\n      className: \"empty-square all-apps d-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 37\n      }\n    }, this.state.tblcon.map((data, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 49\n      }\n    }, this.getMonthName(index)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 49\n      }\n    }, data.count)))), /*#__PURE__*/React.createElement(\"tbody\", {\n      id: \"tblspe\",\n      className: \"empty-square all-apps d-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 37\n      }\n    }, this.state.tblspe.map((data, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 49\n      }\n    }, this.getMonthName(index)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 49\n      }\n    }, data.count), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 49\n      }\n    }, \"$\" + data.sum), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 49\n      }\n    }, \"$\" + data.avg), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 49\n      }\n    }, \"$\" + data.sup), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 49\n      }\n    }, \"$\" + data.supavg))))))))));\n  }\n\n}\n\nexport default reports;","map":{"version":3,"sources":["G:/Projects/Programming/wgucapstonedev/client/src/routes/reports.js"],"names":["React","Component","appointment","routapp","specapp","axios","Navbar","reports","constructor","state","path","window","location","protocol","hostname","crudState","selected","cUser","categories","entries","year","Date","getFullYear","tblall","tblrou","tblcon","tblspe","listapps","listrout","listcons","listspec","handleTypeChange","bind","componentDidMount","localStorage","getItem","props","history","push","all","setState","getAllApps","event","target","value","document","getElementById","classList","remove","add","getCurrentYear","get","then","res","data","forEach","app","console","log","stime","newapp","type","_id","userid","custid","title","overlap","hours","notes","etime","rate","total","tasks","usserid","supply","i","routs","cons","specs","finally","loadApps","changeYear","getMonthName","name","table","rou","con","spe","obj","count","sum","avg","rout","spec","r","avgtasks","c","s","sup","supavg","_stime","indexMonth","_total","toFixed","getTaskCount","_supply","render","map","header","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { appointment, routapp, specapp} from './../js/classes/appointment';\r\nimport axios from 'axios';\r\nimport Navbar from './../routes/nav';\r\n\r\nclass reports extends Component {\r\n\tconstructor() {\r\n        super();\r\n        \r\n        this.state = {\r\n\t\t\tpath: window.location.protocol + '//' + window.location.hostname,\r\n\t\t\tcrudState: '',\r\n\t\t\tselected: '',\r\n            cUser: '',\r\n            categories: [],\r\n            entries: [],\r\n            year: new Date().getFullYear(),\r\n            tblall: [],\r\n            tblrou: [],\r\n            tblcon: [],\r\n            tblspe: [],\r\n        \r\n            listapps: [],\r\n            listrout: [],\r\n            listcons: [],\r\n            listspec: []\r\n        }\r\n        \r\n\t\tthis.handleTypeChange = this.handleTypeChange.bind(this);\r\n\r\n\r\n    }\r\n    \r\n    componentDidMount(){\r\n        if (localStorage.getItem(\"isLoggedIn\") === 'false' || !localStorage.getItem(\"isLoggedIn\") || localStorage.getItem(\"userType\") !== \"Admin\") {\r\n\t\t\tthis.props.history.push('/')\r\n\t\t}\r\n\r\n        let all = [\"Month\", \"Appointments\", \"Sum\", \"Average\", \"Labor Jobs\", \"Consultations\", \"Special Orders\"]\r\n        this.setState({\r\n            categories: all\r\n        })\r\n        this.getAllApps(this.state.year)\r\n    }\r\n\r\n\r\n    handleTypeChange(event){\r\n        \r\n        switch (event.target.value){\r\n            case \"tblall\":\r\n                this.setState({\r\n                    categories: [\"Month\", \"Appointments\", \"Sum\", \"Average\", \"Labor Jobs\", \"Consultations\", \"Special Orders\"]\r\n                })\r\n                document.getElementById(\"tblall\").classList.remove('d-none');\r\n                document.getElementById(\"tblrou\").classList.add('d-none');\r\n                document.getElementById(\"tblcon\").classList.add('d-none');\r\n                document.getElementById(\"tblspe\").classList.add('d-none');\r\n                   break;\r\n            case \"tblrou\":\r\n                this.setState({\r\n                    categories: [\"Month\", \"Appointments\", \"Sum\", \"Average\", \"Tasks\", \"Average Tasks\"]\r\n                   \r\n                })\r\n                document.getElementById(\"tblall\").classList.add('d-none');\r\n                document.getElementById(\"tblrou\").classList.remove('d-none');\r\n                document.getElementById(\"tblcon\").classList.add('d-none');\r\n                document.getElementById(\"tblspe\").classList.add('d-none');\r\n                break;\r\n            case \"tblcon\":\r\n                this.setState({\r\n                    categories: [\"Month\", \"Appointments\"]\r\n                   \r\n                })\r\n                document.getElementById(\"tblall\").classList.add('d-none');\r\n                document.getElementById(\"tblrou\").classList.add('d-none');\r\n                document.getElementById(\"tblcon\").classList.remove('d-none');\r\n                document.getElementById(\"tblspe\").classList.add('d-none');\r\n                break;\r\n            case \"tblspe\":\r\n                this.setState({\r\n                    categories: [\"Month\", \"Appointments\", \"Sum\", \"Average\", \"Supply Cost\", \"Average Supply Cost\"]\r\n                   \r\n                })\r\n                document.getElementById(\"tblall\").classList.add('d-none');\r\n                document.getElementById(\"tblrou\").classList.add('d-none');\r\n                document.getElementById(\"tblcon\").classList.add('d-none');\r\n                document.getElementById(\"tblspe\").classList.remove('d-none');\r\n                break;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    getCurrentYear(){\r\n        axios.get(this.state.path + ':5000/appointment/y/' + this.state.year)\r\n        .then(res => {\r\n            res.data.forEach(app => {\r\n                console.log(\"  ---\" + new Date(app.stime).getFullYear())\r\n                let newapp = {};\r\n                switch (app.type){\r\n                    case 'rout':\r\n                        newapp = new routapp(app._id, app.userid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime, app.rate, app.total, app.tasks )\r\n                        break;\r\n                    case 'cons':\r\n                        newapp = new appointment(app._id, app.usserid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime)\r\n                        break;\r\n                    case 'spec':\r\n                        newapp = new specapp(app._id, app.usserid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime, app.rate, app.total, app.supply)\r\n                        break;\r\n                }\r\n\r\n\r\n            \r\n            });\r\n         \r\n            \r\n        });\r\n    }\r\n\r\n\r\n    getAllApps(i){\r\n\r\n        let routs = []\r\n        let cons = []\r\n        let specs = []\r\n\r\n\r\n\r\n        axios.get(this.state.path + ':5000/appointment/y/' + i)\r\n        .then(res => {\r\n            res.data.forEach(app => {\r\n                let newapp = {};\r\n                switch (app.type){\r\n                    case 'rout':\r\n                        console.log(app.stime)\r\n                        newapp = new routapp(app._id, app.userid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime, app.rate, app.total, app.tasks )\r\n                        routs.push(newapp)\r\n                        break;\r\n                    case 'cons':\r\n                        newapp = new appointment(app._id, app.usserid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime)\r\n                        cons.push(newapp)\r\n                        break;\r\n                    case 'spec':\r\n                        newapp = new specapp(app._id, app.usserid, app.custid, app.title, app.overlap, app.hours, app.type, app.notes, app.stime, app.etime, app.rate, app.total, app.supply)\r\n                        specs.push(newapp)\r\n                        break;\r\n                }\r\n\r\n             \r\n            });\r\n         \r\n            this.setState({\r\n                listrout: routs,\r\n                listcons: cons,\r\n                listspec: specs\r\n            })\r\n            \r\n        }).finally(()=> {\r\n            this.loadApps()\r\n\r\n        });\r\n            \r\n\r\n    }\r\n\r\n \r\n\r\n    changeYear(i){\r\n        this.getAllApps(this.state.year+i);\r\n        this.setState({\r\n            year: this.state.year + i\r\n        })\r\n        console.log(this.state.year)\r\n    }\r\n    \r\n    getMonthName(i){\r\n        let name = ''\r\n        switch (i){\r\n            case 0:\r\n                name = \"Jan\"\r\n                break;\r\n            case 1:\r\n                name = \"Feb\"\r\n                break;\r\n            case 2:\r\n                name = \"Mar\"\r\n                break;\r\n            case 3:\r\n                name = \"Apr\"\r\n                break;\r\n            case 4:\r\n                name = \"May\"\r\n                break;\r\n            case 5:\r\n                name = \"Jun\"\r\n                break;\r\n            case 6:\r\n                name = \"Jul\"\r\n                break;\r\n            case 7:\r\n                name = \"Aug\"\r\n                break;\r\n            case 8:\r\n                name = \"Sep\"\r\n                break;\r\n            case 9:\r\n                name = \"Oct\"\r\n                break;\r\n            case 10:\r\n                name = \"Nov\"\r\n                break;\r\n            case 11:\r\n                name = \"Dec\"\r\n                break;\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    \r\n\r\n    loadApps(){\r\n        let table = []\r\n        let rou = []\r\n        let con = []\r\n        let spe = []\r\n\r\n        for(let i = 0; i <= 11; i++){\r\n            let obj = {}\r\n            obj.count = 0;\r\n            obj.sum = 0;\r\n            obj.avg = 0;\r\n            obj.rout = 0;\r\n            obj.cons = 0;\r\n            obj.spec = 0;\r\n\r\n            let r = {}\r\n            r.count = 0;\r\n            r.sum = 0;\r\n            r.avg = 0;\r\n            r.tasks = 0;\r\n            r.avgtasks = 0;\r\n\r\n            let c = {}\r\n            c.count = 0;\r\n\r\n            let s = {}\r\n            s.count = 0;\r\n            s.sum = 0;\r\n            s.avg = 0;\r\n            s.sup = 0;\r\n            s.supavg = 0;\r\n\r\n            table.push(obj)\r\n            rou.push(r)\r\n            con.push(c)\r\n            spe.push(s)\r\n            \r\n\r\n        \r\n\r\n        }\r\n        this.state.listrout.forEach(app => {\r\n            console.log(app._stime)\r\n            console.log(app.indexMonth())\r\n           table[app.indexMonth()].count++\r\n           table[app.indexMonth()].rout++\r\n\r\n           rou[app.indexMonth()].count++\r\n\r\n           table[app.indexMonth()].sum = app._total + table[app.indexMonth()].sum\r\n\r\n           rou[app.indexMonth()].sum = app._total + rou[app.indexMonth()].sum\r\n\r\n\r\n           if(table[app.indexMonth()].sum > 0){\r\n                table[app.indexMonth()].avg = (table[app.indexMonth()].sum/table[app.indexMonth()].count).toFixed(2)\r\n           }\r\n\r\n           if(rou[app.indexMonth()].sum > 0){\r\n                rou[app.indexMonth()].avg = (rou[app.indexMonth()].sum/rou[app.indexMonth()].count).toFixed(2)\r\n            }\r\n\r\n            rou[app.indexMonth()].tasks = app.getTaskCount() + rou[app.indexMonth()].tasks\r\n            if(rou[app.indexMonth()].tasks > 0){\r\n                rou[app.indexMonth()].avgtasks = (rou[app.indexMonth()].tasks/rou[app.indexMonth()].count).toFixed(2)\r\n            }\r\n\r\n\r\n        });\r\n\r\n        this.state.listcons.forEach(app => {\r\n            table[app.indexMonth()].count++\r\n            table[app.indexMonth()].cons++\r\n\r\n            con[app.indexMonth()].count++\r\n\r\n\r\n \r\n         });\r\n\r\n        this.state.listspec.forEach(app => {\r\n           table[app.indexMonth()].count++\r\n           table[app.indexMonth()].spec++\r\n\r\n           spe[app.indexMonth()].count++\r\n\r\n           table[app.indexMonth()].sum = app._total + table[app.indexMonth()].sum\r\n\r\n           spe[app.indexMonth()].sum = app._total + spe[app.indexMonth()].sum\r\n\r\n\r\n           if(table[app.indexMonth()].sum > 0){\r\n            table[app.indexMonth()].avg = (table[app.indexMonth()].sum/table[app.indexMonth()].count).toFixed(2)\r\n           }\r\n\r\n           if(spe[app.indexMonth()].sum > 0){\r\n                spe[app.indexMonth()].avg = (spe[app.indexMonth()].sum/spe[app.indexMonth()].count).toFixed(2)\r\n           }\r\n\r\n           spe[app.indexMonth()].sup = app._supply + spe[app.indexMonth()].sup\r\n\r\n           if(spe[app.indexMonth()].sup > 0){\r\n            spe[app.indexMonth()].supavg = (spe[app.indexMonth()].sup/spe[app.indexMonth()].count).toFixed(2)\r\n            } else{\r\n                spe[app.indexMonth()].supavg = 0;\r\n            }    \r\n\r\n\r\n\r\n\r\n        });\r\n\r\n\r\n        this.setState({ tblall : table})\r\n        this.setState({ tblrou : rou})   \r\n        this.setState({ tblcon : con})   \r\n        this.setState({ tblspe : spe})   \r\n\r\n        console.log(this.state.tblall)\r\n        console.log(this.state.tblspe)\r\n\r\n    }\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n                        \r\n                        <div className=\"col-lg border input-col p-0 h-100\">\r\n                        <div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-2 \">\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary  w-100 h-100 m-0\" onClick={() => this.changeYear(-1)}>\r\n\t\t\t\t\t\t\t\t\t\t<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-left\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M5.854 4.646a.5.5 0 0 1 0 .708L3.207 8l2.647 2.646a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 0 1 .708 0z\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M2.5 8a.5.5 0 0 1 .5-.5h10.5a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-8\">\r\n                                <h4 className=\"display-4 mb-4 text-center\">Current Year: {this.state.year}</h4>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"col-2 \">\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary  w-100 h-100 m-0\" onClick={() => this.changeYear(1)}>\r\n\t\t\t\t\t\t\t\t\t\t<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-arrow-right\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M10.146 4.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L12.793 8l-2.647-2.646a.5.5 0 0 1 0-.708z\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<path fill-rule=\"evenodd\" d=\"M2 8a.5.5 0 0 1 .5-.5H13a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8z\"/>\r\n\t\t\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t\t\t</button>\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n                            <div className=\"col-lg border  recent p-0\">\r\n                                <div className=\"btn-group btn-group-toggle w-100 w-100 m-0 \" data-toggle=\"buttons\">\r\n\r\n                                    <label className=\"btn btn-secondary w-100 active\">\r\n                                        <input type=\"radio\" name=\"type\" id=\"allApps\" value='tblall' onClick={this.handleTypeChange} /> All Appointments\r\n                                    </label>\r\n                                    <label className=\"btn btn-secondary w-100\">\r\n                                        <input type=\"radio\" name=\"type\" id=\"allLabor\" value='tblrou' onClick={this.handleTypeChange} /> All Labor\r\n                                    </label>\r\n                                    <label className=\"btn btn-secondary w-100\">\r\n                                        <input type=\"radio\" name=\"type\" id=\"allCons\" value='tblcon' onClick={this.handleTypeChange} /> All Consultations\r\n                                    </label>\r\n                                    <label className=\"btn btn-secondary w-100\">\r\n                                        <input type=\"radio\" name=\"type\" id=\"allSpec\" value='tblspe' onClick={this.handleTypeChange} /> All Special Orders\r\n                                    </label>\r\n                \r\n                                </div>\r\n                            </div>\r\n\t\t\t\t\t\t\t<div className=\"col-lg \">\r\n\r\n                                <table className=\"table table-striped table-fix\">\r\n                                    <thead className=\"thead-dark\">\r\n                                        <tr>\r\n                                        {\r\n                                            this.state.categories.map((header, index) => (\r\n                                            <th scope=\"col\" key={index}>{header}</th>\r\n                                                )\r\n                                            )\r\n\r\n                                        }\r\n\r\n                                        </tr>\r\n\r\n                                        \r\n                                    </thead>\r\n                                    <tbody id=\"tblall\" className=\"empty-square all-apps\"> \r\n                                        {\r\n                                            this.state.tblall.map((data, index) => (\r\n                                            <tr>    \r\n                                                <th scope=\"col\" key={index}>{this.getMonthName(index)}</th>\r\n                                                <td>{data.count}</td>\r\n                                                <td>{\"$\"+data.sum}</td>\r\n                                                <td>{\"$\"+data.avg}</td>\r\n                                                <td>{data.rout}</td>\r\n                                                <td>{data.cons}</td>\r\n                                                <td>{data.spec}</td>\r\n\r\n                                            </tr>\r\n                                                )\r\n                                            )\r\n\r\n                                        }\r\n                                    </tbody>\r\n\r\n                                    <tbody id=\"tblrou\" className=\"empty-square all-apps d-none\"> \r\n                                        {\r\n                                            this.state.tblrou.map((data, index) => (\r\n                                            <tr>    \r\n                                                <th scope=\"col\" key={index}>{this.getMonthName(index)}</th>\r\n                                                <td>{data.count}</td>\r\n                                                <td>{\"$\"+data.sum}</td>\r\n                                                <td>{\"$\"+data.avg}</td>\r\n                                                <td>{data.tasks}</td>\r\n                                                <td>{data.avgtasks}</td>\r\n\r\n                                            </tr>\r\n                                                )\r\n                                            )\r\n\r\n                                        }\r\n                                    </tbody>\r\n\r\n                                    <tbody id=\"tblcon\" className=\"empty-square all-apps d-none\"> \r\n                                        {\r\n                                            this.state.tblcon.map((data, index) => (\r\n                                            <tr>    \r\n                                                <th scope=\"col\" key={index}>{this.getMonthName(index)}</th>\r\n                                                <td>{data.count}</td>\r\n                                            </tr>\r\n                                                )\r\n                                            )\r\n\r\n                                        }\r\n                                    </tbody>\r\n\r\n                                    <tbody id=\"tblspe\" className=\"empty-square all-apps d-none\"> \r\n                                        {\r\n                                            this.state.tblspe.map((data, index) => (\r\n                                            <tr>    \r\n                                                <th scope=\"col\" key={index}>{this.getMonthName(index)}</th>\r\n                                                <td>{data.count}</td>\r\n                                                <td>{\"$\"+data.sum}</td>\r\n                                                <td>{\"$\"+data.avg}</td>\r\n                                                <td>{\"$\"+data.sup}</td>\r\n                                                <td>{\"$\"+data.supavg}</td>\r\n\r\n                                            </tr>\r\n                                                )\r\n                                            )\r\n\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default reports;\r\n"]},"metadata":{},"sourceType":"module"}